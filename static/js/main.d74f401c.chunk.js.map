{"version":3,"sources":["Components/profile/stats/StatsStyled.js","Components/profile/stats/Stats.js","Components/profile/ProfileStyled.js","Components/profile/Profile.js","Components/statistics/stats/StatsStyled.js","Components/statistics/stats/Stats.js","Components/statistics/StatsStyled.js","Components/statistics/Statistics.js","Components/friendsList/friend/FriendStyled.js","Components/friendsList/friend/Friend.js","Components/friendsList/FriendsListStyled.js","Components/friendsList/FriendsList.js","Components/transactionsHistory/transactionsBody/transaction/TransactionStyled.js","Components/transactionsHistory/transactionsBody/transaction/Transaction.js","Components/transactionsHistory/transactionsBody/TransactionBodyStyled.js","Components/transactionsHistory/transactionsBody/TransactionsBody.js","Components/transactionsHistory/TransactionsHistoryStyled.js","Components/transactionsHistory/TransactionsHistory.js","Components/App.js","index.js"],"names":["StatsStyled","styled","ul","Stats","stats","className","followers","views","likes","ProfileStyled","div","Profile","user","avatar","name","tag","location","src","alt","statisticalData","randomColor","color","i","push","parseInt","Math","random","map","id","label","percentage","style","backgroundColor","section","Statistics","title","FriendStyled","li","Friend","isOnline","width","FriendsListStyled","FriendsList","friends","TransactionStyled","tr","Transaction","type","amount","currency","TransactionBodyStyled","tbody","TransactionsBody","transactions","transaction","TransactionsHistoryStyled","table","TransactionsHistory","cellSpacing","App","propTypes","PropTypes","object","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d74f401c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StatsStyled = styled.ul`\r\n  display: flex;\r\n  text-align: center;\r\n  background-color: #f3f6f9;\r\n\r\n  .item {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: calc(100% / 3);\r\n    border: 1px solid #e7ecf2;\r\n  }\r\n  .label {\r\n    padding-bottom: 5px;\r\n  }\r\n  .quantity {\r\n    font-weight: 900;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StatsStyled } from './StatsStyled';\r\n\r\nconst Stats = ({ stats }) => {\r\n  return (\r\n    <StatsStyled>\r\n      <li className=\"item\">\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li className=\"item\">\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li className=\"item\">\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </StatsStyled>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n\r\nStats.propTypes = {\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ProfileStyled = styled.div`\r\n  width: 250px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  background-color: #fff;\r\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n  padding-top: 20px;\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 15px;\r\n  overflow: hidden;\r\n  .description {\r\n    text-align: center;\r\n    color: #8e9ba8;\r\n  }\r\n  .avatar {\r\n    width: 50%;\r\n    border-radius: 50%;\r\n    background-color: purple;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    margin-bottom: 10px;\r\n  }\r\n  .name {\r\n    color: #1d2c3f;\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    margin-bottom: 10px;\r\n  }\r\n  .tag {\r\n    margin-bottom: 6px;\r\n  }\r\n  .location {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import Stats from './stats/Stats';\r\nimport PropTypes from 'prop-types';\r\nimport { ProfileStyled } from './ProfileStyled';\r\n\r\nconst Profile = ({ user }) => {\r\n  const { avatar, name, tag, location } = user;\r\n  return (\r\n    <ProfileStyled>\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={name} className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n      <Stats stats={user.stats} />\r\n    </ProfileStyled>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.object,\r\n  }),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StatsStyled = styled.ul`\r\n  display: flex;\r\n  color: white;\r\n\r\n  .item {\r\n    width: calc(100% / 5);\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n  }\r\n  .label {\r\n  }\r\n  .percentage {\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StatsStyled } from './StatsStyled';\r\n\r\nconst Stats = ({ statisticalData }) => {\r\n  const randomColor = () => {\r\n    const color = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      color.push(parseInt(Math.random() * 256));\r\n    }\r\n    return color;\r\n  };\r\n\r\n  return (\r\n    <StatsStyled>\r\n      {statisticalData.map(({ id, label, percentage }) => (\r\n        <li\r\n          key={id}\r\n          style={{ backgroundColor: `rgb(${randomColor()})` }}\r\n          className=\"item\"\r\n        >\r\n          <span className=\"label\">{label}</span>\r\n          <span className=\"percentage\">{percentage}</span>\r\n        </li>\r\n      ))}\r\n    </StatsStyled>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n\r\nStats.propTypes = {\r\n  statisticalData: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StatsStyled = styled.section`\r\n  width: 250px;\r\n  margin-top: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #fff;\r\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n  .title {\r\n    font-size: 30px;\r\n    line-height: 2;\r\n    font-weight: 700;\r\n    color: #545557;\r\n    display: block;\r\n  }\r\n`;\r\n","import Stats from './stats/Stats';\r\nimport PropTypes from 'prop-types';\r\nimport { StatsStyled } from './StatsStyled';\r\n\r\nconst Statistics = ({ title, statisticalData }) => {\r\n  return (\r\n    <StatsStyled>\r\n      <h2 className=\"title\">{title || ''}</h2>\r\n      <Stats statisticalData={statisticalData} />\r\n    </StatsStyled>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const FriendStyled = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px;\r\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n  .status {\r\n    margin-right: 10px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n  }\r\n  .avatar {\r\n    background-color: purple;\r\n    border-radius: 5px;\r\n  }\r\n  .name {\r\n    margin-left: 10px;\r\n    font-weight: 700px;\r\n    font-size: 20px;\r\n  }\r\n  .green {\r\n    background-color: green;\r\n  }\r\n  .red {\r\n    background-color: red;\r\n  }\r\n`;\r\n","import { FriendStyled } from './FriendStyled';\r\n\r\nconst Friend = ({ isOnline, avatar, name }) => {\r\n  return (\r\n    <FriendStyled>\r\n      <span className={`status ${isOnline ? 'green' : 'red'}`}>{isOnline}</span>\r\n      <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </FriendStyled>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n","import styled from 'styled-components';\r\n\r\nexport const FriendsListStyled = styled.ul`\r\n  background-color: white;\r\n  width: 250px;\r\n  padding: 10px;\r\n  margin-top: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport Friend from './friend/Friend';\r\nimport { FriendsListStyled } from './FriendsListStyled';\r\n\r\nconst FriendsList = ({ friends }) => {\r\n  return (\r\n    <FriendsListStyled>\r\n      {friends.map(({ id, isOnline, avatar, name }) => (\r\n        <Friend key={id} isOnline={isOnline} avatar={avatar} name={name} />\r\n      ))}\r\n    </FriendsListStyled>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      isOnline: PropTypes.bool,\r\n      avatar: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const TransactionStyled = styled.tr`\r\n  color: #797d80;\r\n\r\n  &:nth-child(2n) {\r\n    background-color: #ecf1f4;\r\n  }\r\n  td {\r\n    padding-bottom: 4px;\r\n    padding-top: 4px;\r\n  }\r\n  td:not(:last-child) {\r\n    border-right: 1px solid #e0e5e8;\r\n  }\r\n`;\r\n","import { TransactionStyled } from './TransactionStyled';\r\n\r\nconst Transaction = ({ type, amount, currency }) => {\r\n  return (\r\n    <TransactionStyled>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </TransactionStyled>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import styled from 'styled-components';\r\n\r\nexport const TransactionBodyStyled = styled.tbody`\r\n  text-align: center;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport Transaction from './transaction/Transaction';\r\nimport { TransactionBodyStyled } from './TransactionBodyStyled';\r\n\r\nconst TransactionsBody = ({ transactions }) => {\r\n  return (\r\n    <TransactionBodyStyled>\r\n      {transactions.map((transaction) => (\r\n        <Transaction\r\n          key={transaction.id}\r\n          type={transaction.type}\r\n          amount={transaction.amount}\r\n          currency={transaction.currency}\r\n        />\r\n      ))}\r\n    </TransactionBodyStyled>\r\n  );\r\n};\r\n\r\nexport default TransactionsBody;\r\n\r\nTransactionsBody.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const TransactionsHistoryStyled = styled.table`\r\n  background-color: white;\r\n  width: 500px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid #e0e5e8;\r\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n  thead {\r\n    background-color: #00bcd5;\r\n    color: white;\r\n  }\r\n  th {\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    font-size: 22px;\r\n  }\r\n  th:not(:last-child) {\r\n    border-right: 1px solid white;\r\n  }\r\n`;\r\n","import TransactionsBody from './transactionsBody/TransactionsBody';\r\nimport PropTypes from 'prop-types';\r\nimport { TransactionsHistoryStyled } from './TransactionsHistoryStyled';\r\n\r\nconst TransactionsHistory = ({ transactions }) => {\r\n  return (\r\n    <TransactionsHistoryStyled cellSpacing=\"0\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <TransactionsBody transactions={transactions} />\r\n    </TransactionsHistoryStyled>\r\n  );\r\n};\r\n\r\nexport default TransactionsHistory;\r\n\r\nTransactionsHistory.propTypes = {\r\n  transactions: PropTypes.array,\r\n};\r\n","import Profile from './profile/Profile';\r\nimport Statistics from './statistics/Statistics';\r\nimport user from '../assets/user.json';\r\nimport friends from '../assets/friends.json';\r\nimport PropTypes from 'prop-types';\r\nimport statisticalData from '../assets/statistical-data.json';\r\nimport FriendsList from './friendsList/FriendsList';\r\nimport TransactionsHistory from './transactionsHistory/TransactionsHistory';\r\nimport transactions from '../assets/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <main>\r\n      <Profile user={user} />\r\n      <Statistics title=\"Upload stats\" statisticalData={statisticalData} />\r\n      <Statistics statisticalData={statisticalData} />\r\n      <FriendsList friends={friends} />\r\n      <TransactionsHistory transactions={transactions} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}